version: '2.4'

services:
  app:
    image: document-search
    container_name: document-search
    restart: always
    build: .
    # Allow container to be attached to, e.g., to access the pdb shell
    stdin_open: true
    tty: true
    ports:
      # Map ports on your computer to ports on your container. This allows you,
      # e.g., to visit your containerized application in a browser on your
      # computer.
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      solr:
        condition: service_started
    volumes:
      # Mount the development directory as a volume into the container, so
      # Docker automatically recognizes your changes.
      - .:/app
      - ${PWD}/docsearch/local_settings.dev.py:/app/docsearch/local_settings.py
    command: python manage.py runserver 0.0.0.0:8000

  migration:
    container_name: document-search-migration
    image: document-search:latest
    depends_on:
      # Declaring this dependency ensures that your application image is built
      # before migrations are run, and that your application and migrations can
      # be run from the same image, rather than creating purpose-specific
      # copies.
      - app
    volumes:
      # These should generally be the same as your application volumes.
      - .:/app
      - ${PWD}/docsearch/local_settings.example.py:/app/docsearch/local_settings.py
    command: python manage.py migrate

  postgres:
    container_name: document-search-postgres
    image: mdillon/postgis:11
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      # The default Postgres image exposes a number of environmental variables
      # that allow you to configure the container's behavior, without writing
      # any additional code. Specify the name of your database, and any other
      # variables, here. https://hub.docker.com/_/postgres/#environment-variables
      - POSTGRES_DB=docsearch
      - POSTGRES_PASSWORD=postgres
    volumes:
      # By default, Postgres instantiates an anonymous volume. Use a named
      # one, so your data persists beyond the life of the container. See this
      # post for a discussion of the pitfalls of Postgres and anonymous
      # volumes: https://linuxhint.com/run_postgresql_docker_compose/
      - document-search-db-data:/var/lib/postgresql/data
    ports:
      - 32001:5432

  solr:
    image: solr:8.3
    container_name: document-search-solr
    volumes:
      - ./solr_configs:/docsearch_configs
      - solr-data:/var/solr/data/
    command: sh -c 'solr-create -c docsearch -d /docsearch_configs'
    ports:
      - 8986:8983
    environment:
      SOLR_LOG_LEVEL: INFO
    restart: on-failure

volumes:
  # Declare your named volume for Postgres.
  document-search-db-data:
  solr-data:
