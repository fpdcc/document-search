# Generated by Django 2.2.13 on 2023-09-26 17:12

import django.contrib.postgres.fields
from django.db import migrations, models
import docsearch.models
import docsearch.validators


class Migration(migrations.Migration):

    dependencies = [
        ('docsearch', '0015_auto_20230829_0939'),
    ]

    operations = [
        migrations.AlterField(
            model_name='book',
            name='range',
            field=docsearch.models.InclusiveIntegerRangeField(blank=True, help_text='Specify the lower and upper bounds for the range of values represented by this field. If this field only has one value, set it as both the lower and upper bounds.', max_length=255, null=True, validators=[docsearch.validators.validate_int_range]),
        ),
        migrations.AlterField(
            model_name='book',
            name='section',
            field=docsearch.models.InclusiveIntegerRangeField(blank=True, help_text='Specify the lower and upper bounds for the range of values represented by this field. If this field only has one value, set it as both the lower and upper bounds.', max_length=255, null=True, validators=[docsearch.validators.validate_int_range]),
        ),
        migrations.AlterField(
            model_name='controlmonumentmap',
            name='range',
            field=models.PositiveIntegerField(null=True, validators=[docsearch.validators.validate_int_btwn]),
        ),
        migrations.AlterField(
            model_name='controlmonumentmap',
            name='section',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(null=True), help_text='Set multiple values for this field by separating them with commas. E.g. to save the values 1, 2, and 3, record them as 1,2,3.', size=None, validators=[docsearch.validators.validate_int_array]),
        ),
        migrations.AlterField(
            model_name='flatdrawing',
            name='area',
            field=models.PositiveIntegerField(blank=True, null=True, validators=[docsearch.validators.validate_int_btwn]),
        ),
        migrations.AlterField(
            model_name='flatdrawing',
            name='cross_ref_area',
            field=models.PositiveIntegerField(blank=True, null=True, validators=[docsearch.validators.validate_int_btwn]),
        ),
        migrations.AlterField(
            model_name='flatdrawing',
            name='cross_ref_section',
            field=models.PositiveIntegerField(blank=True, null=True, validators=[docsearch.validators.validate_int_btwn]),
        ),
        migrations.AlterField(
            model_name='license',
            name='license_number',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='license',
            name='range',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(null=True), default=list, help_text='Set multiple values for this field by separating them with commas. E.g. to save the values 1, 2, and 3, record them as 1,2,3.', size=None, validators=[docsearch.validators.validate_int_array]),
        ),
        migrations.AlterField(
            model_name='license',
            name='section',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(null=True), default=list, help_text='Set multiple values for this field by separating them with commas. E.g. to save the values 1, 2, and 3, record them as 1,2,3.', size=None, validators=[docsearch.validators.validate_int_array]),
        ),
        migrations.AlterField(
            model_name='projectfile',
            name='area',
            field=models.PositiveIntegerField(blank=True, null=True, validators=[docsearch.validators.validate_int_btwn]),
        ),
        migrations.AlterField(
            model_name='projectfile',
            name='cabinet_number',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[docsearch.validators.validate_int_btwn]),
        ),
        migrations.AlterField(
            model_name='projectfile',
            name='section',
            field=models.PositiveIntegerField(blank=True, null=True, validators=[docsearch.validators.validate_int_btwn]),
        ),
        migrations.AlterField(
            model_name='survey',
            name='cross_ref_area',
            field=models.PositiveIntegerField(blank=True, null=True, validators=[docsearch.validators.validate_int_btwn]),
        ),
        migrations.AlterField(
            model_name='survey',
            name='cross_ref_section',
            field=models.PositiveIntegerField(blank=True, null=True, validators=[docsearch.validators.validate_int_btwn]),
        ),
        migrations.AlterField(
            model_name='survey',
            name='range',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(blank=True, null=True), help_text='Set multiple values for this field by separating them with commas. E.g. to save the values 1, 2, and 3, record them as 1,2,3.', size=None, validators=[docsearch.validators.validate_int_array]),
        ),
        migrations.AlterField(
            model_name='survey',
            name='section',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(blank=True, null=True), help_text='Set multiple values for this field by separating them with commas. E.g. to save the values 1, 2, and 3, record them as 1,2,3.', size=None, validators=[docsearch.validators.validate_int_array]),
        ),
    ]
